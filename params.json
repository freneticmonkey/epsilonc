{"name":"Epsilon","tagline":"A basic C++ sandbox / prototyping engine","body":"epsilon\r\n=======\r\n\r\nA basic C++ sandbox / prototyping engine.  The engine is developed in my spare time and as such updates are currently quite sporadic.  Development started when I began to run into performance limitations of the previous Python implementation of the engine.  I'm using this engine for proof of concept implementations for rapid game development features.\r\n\r\nFeatures\r\n========\r\n* OpenGL Renderer\r\n* Cross Platform: Windows / MacOS\r\n* Python scripting\r\n* Bullet Physics\r\n* Hotloading Resources\r\n* Basic XML Scene format\r\n\r\nPlatform Status\r\n===============\r\n* Windows - OK\r\n* MacOS - Unstable\r\n\r\n### Component Based Engine ###\r\nI developed the engine with the Unity 3D architecture in mind.  Each scene contains nodes, which can be assigned various components for audio, physics, script etc.\r\n\r\n### Scripting ###\r\nWhere possible I've tried to expose the engines classes to Python and most engine components are able to be modified from script.\r\n\r\n### Hotloading ###\r\nCurrently all engine resources can be modified in place without restarting the engine.  This includes:\r\n- scripts\r\n- shaders\r\n- models\r\n- textures\r\n- audio\r\n- scenes\r\n\r\nDependencies\r\n============\r\n* SFML\r\n* Bullet Physics\r\n* Intel Thread Building Blocks\r\n* Boost ( Python, FileSystem, Format)\r\n* Glew\r\n\r\nTODO\r\n====\r\n\r\n### 10/1/2015 ###\r\n* Fix currently disabled UI (Done) - Replaced with IMGUI https://github.com/ocornut/imgui Wrapped By: (https://github.com/Mischa-Alff/imgui-backends)\r\n* Convert math classes to glm\r\n* Shadow Rendering\r\n* Package Management\r\n* Documentation\r\n* Unit Testing\r\n* Job tree threading implementation\r\n* Scene Editor\r\n* Switch to cross platform build system","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}